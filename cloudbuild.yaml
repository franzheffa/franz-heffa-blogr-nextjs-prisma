steps:
# Step 1: Build the Docker image and push it to Artifact Registry
# This uses the root of the repository as the build context
# to ensure that files like pyproject.toml are found.
- name: 'gcr.io/cloud-builders/docker'
  args: [
    'build',
    '-t', 'europe-west1-docker.pkg.dev/$PROJECT_ID/cloud-run-source-deploy/agent-starter-pack-viize/agent-starter-pack-viize:$COMMIT_SHA',
    '.', # Build context is the repository root
    '-f', 'src/deployment_targets/cloud_run/Dockerfile' # Specifies the Dockerfile path
  ]

# Step 2: Push the image to Artifact Registry (explicitly)
- name: 'gcr.io/cloud-builders/docker'
  args: [
    'push',
    'europe-west1-docker.pkg.dev/$PROJECT_ID/cloud-run-source-deploy/agent-starter-pack-viize/agent-starter-pack-viize:$COMMIT_SHA'
  ]

# Step 3: Deploy the image to Cloud Run
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: gcloud
  args:
    - 'run'
    - 'deploy'
    - 'agent-starter-pack-viize'
    - '--image=europe-west1-docker.pkg.dev/$PROJECT_ID/cloud-run-source-deploy/agent-starter-pack-viize/agent-starter-pack-viize:$COMMIT_SHA'
    - '--region=europe-west1'
    - '--platform=managed'
    - '--allow-unauthenticated'
    - '--service-account=agent-starter-pack-viize-sa@buttertech-ai-platform.iam.gserviceaccount.com'

options:
  logging: CLOUD_LOGGING_ONLY
